name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: your-docker-image-name
  CONTAINER_REGISTRY: your-container-registry-url
  EKS_CLUSTER_NAME: your-eks-cluster-name
  AWS_REGION: your-aws-region
  TF_WORKING_DIR: terraform-directory

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t $CONTAINER_REGISTRY/$DOCKER_IMAGE:latest .
        docker push $CONTAINER_REGISTRY/$DOCKER_IMAGE:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run tests
      run: |
        # Replace this with your test command
        ./run-tests.sh

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: $AWS_REGION

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init
      working-directory: $TF_WORKING_DIR

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: $TF_WORKING_DIR

    - name: Update EKS Deployment
      run: |
        kubectl set image deployment/your-deployment-name your-container=$CONTAINER_REGISTRY/$DOCKER_IMAGE:latest
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
